{"version":3,"sources":["component/header.js","component/section.js","component/footer.js","component/comtest/newtest.js","App.js","reportWebVitals.js","index.js"],"names":["Header","GnbList","id","name","link","map","gnbList","to","className","InputSample","useState","nickname","inputs","setInputs","txt","text","setText","onChange","e","target","value","placeholder","onClick","nameChk","nickChk","console","log","Section","newfooterData","content","person","item","email","tel","Footer","Newtest","App","process","basename","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8dAwBeA,MArBf,WACI,IAKMC,EALO,CACb,CAACC,GAAG,EAAGC,KAAM,SAAKC,KAAM,KACxB,CAACF,GAAG,EAAGC,KAAM,qBAAOC,KAAM,SAGLC,KAAI,SAACC,GAAD,OACrB,6BACI,cAAC,IAAD,CAAMC,GAAID,EAAQF,KAAlB,SAAyBE,EAAQH,QAD5BG,EAAQJ,OAIvB,OACE,mCACI,oBAAIM,UAAU,QAAd,qEACA,8BACI,6BAAKP,U,6BCbjB,SAASQ,IAEP,MAA4BC,mBAAS,CACnCP,KAAK,GACLQ,SAAS,KAFX,mBAAOC,EAAP,KAAeC,EAAf,KAIA,EAAwBH,mBAAS,CAC/BI,IAAI,KADN,mBAAOC,EAAP,KAAaC,EAAb,KAIQb,EAAmBS,EAAnBT,KAAMQ,EAAaC,EAAbD,SACNG,EAAQC,EAARD,IAGFG,EAAW,SAACC,GAChB,MAAwBA,EAAEC,OAAlBC,EAAR,EAAQA,MAAOjB,EAAf,EAAeA,KACfU,EAAU,2BACLD,GADI,kBAENT,EAAOiB,MAqBZ,OACE,gCACE,uBAAOjB,KAAK,OAAOkB,YAAY,eAAKJ,SAAUA,EAAUG,MAAOjB,IAC/D,uBAAOA,KAAK,WAAWkB,YAAY,qBAAOJ,SAAUA,EAAUG,MAAOT,IACrE,wBAAQW,QArBI,WACdT,EAAU,CACRV,KAAK,GACLQ,SAAS,MAkBT,gCACA,gCACE,8BAAIR,EAAJ,OAAcQ,EAAd,gEACA,wBAAQW,QAjBA,WACZ,IAAMC,EAAmB,KAATpB,EAAc,2DAAgB,sBAASA,EAAO,sBACxDqB,EAAuB,KAAbb,EAAkB,4DAAiB,uBAAUA,EAAW,sBACxEc,QAAQC,IAAIvB,GAEZa,EAAQ,CACNF,IAAKS,EAAUC,KAWb,0BACA,4BAAIV,UAgBGa,MATf,WACE,OACE,kCACI,cAAClB,EAAD,OC3DFmB,G,YAA2BC,QAAQC,OAAOzB,KAAI,SAAC0B,EAAM5B,EAAO6B,EAAQC,GACxE,OACE,+BACE,6BACGF,EAAK5B,MADCA,GAGT,6BACG4B,EAAKC,OADCA,GAGT,6BACGD,EAAKE,KADCA,UAeAC,MARf,WACE,OACE,iCACKN,K,MCdMO,MANf,WACI,OACI,mBAAG3B,UAAU,OAAb,6E,OCsBO4B,MAlBf,WAGE,OADAX,QAAQC,IAAIW,IAGV,cAAC,IAAD,CAAeC,SAAUD,GAAzB,SACE,sBAAK7B,UAAU,MAAf,UACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAO+B,OAAK,EAACC,KAAK,IAAIC,UAAWd,IACjC,cAAC,IAAD,CAAOY,OAAK,EAACC,KAAK,OAAOC,UAAWN,OAEtC,cAAC,EAAD,UCROO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAD,CAAed,SAAUD,GAAzB,SACE,cAAC,IAAMgB,WAAP,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6216dfa6.chunk.js","sourcesContent":["import '../css/header.css';\r\nimport { Link} from \"react-router-dom\";\r\n\r\nfunction Header() {\r\n    const data = [\r\n    {id:1, name: \"홈\", link: \"/\"},\r\n    {id:2, name: \"테스트\", link: \"/com\"}\r\n\r\n    ];\r\n    const GnbList = data.map((gnbList) => \r\n        <li key={gnbList.id}>\r\n            <Link to={gnbList.link}>{gnbList.name}</Link>\r\n        </li>\r\n    );\r\n  return (\r\n    <header>\r\n        <h1 className=\"title\">권지웅의 포트폴리오</h1>\r\n        <nav>\r\n            <ul>{GnbList}</ul>\r\n        </nav>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import '../css/section.css';\r\nimport React, { useState } from 'react';\r\n// import addComponet from './addComponent';\r\n\r\n\r\nfunction InputSample(){\r\n  /* input state 설정 */\r\n  const [inputs, setInputs] = useState({\r\n    name:'',\r\n    nickname:''\r\n  });\r\n  const [text, setText] = useState({\r\n    txt:''\r\n  });\r\n  /* state 저장 */\r\n  const { name, nickname } = inputs;\r\n  const { txt } = text;\r\n\r\n  /* onChane 이벤트로 state 변경 */\r\n  const onChange = (e) => {\r\n    const { value, name } = e.target;\r\n    setInputs({\r\n      ...inputs,\r\n      [name]: value\r\n    });\r\n  };\r\n  /* onReset 이벤트로 state 초기화 */\r\n  const onReset = () => {\r\n    setInputs({\r\n      name:'',\r\n      nickname:''\r\n    });\r\n  };\r\n  /* onSet 이벤트로 state 다시 저장후 return*/\r\n  const onSet = () => {\r\n    const nameChk = name === '' ? \"이름을 입력해주세요.\" : \"이름은 \" + name + '입니다.';\r\n    const nickChk = nickname === '' ? \" 별명을 입력해주세요.\" : \" 별명은 \" + nickname + '입니다.';\r\n    console.log(name)\r\n    \r\n    setText({\r\n      txt: nameChk + nickChk\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input name=\"name\" placeholder=\"이름\" onChange={onChange} value={name}/>\r\n      <input name=\"nickname\" placeholder=\"닉네임\"  onChange={onChange} value={nickname}/>\r\n      <button onClick={onReset}>초기화</button>\r\n      <div>\r\n        <p>{name} / ({nickname})님 오신걸 환영합니다.</p>\r\n        <button onClick={onSet}>확인</button>\r\n        <p>{txt}</p>\r\n        {/* <button onClick={addCom}>컴포넌트 추가</button>         */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Section() {\r\n  return (\r\n    <section>\r\n        <InputSample />\r\n        {/* <addComponet  value={this.props} /> */}\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Section;\r\n","import '../css/footer.css';\r\nimport footerData from '../json/footer.json';\r\n\r\nconst newfooterData = footerData.content.person.map((item, name,  email,  tel) => {\r\n  return (\r\n    <ul>\r\n      <li key={name}>\r\n        {item.name} \r\n      </li>\r\n      <li key={email}>\r\n        {item.email} \r\n      </li>\r\n      <li key={tel}>\r\n        {item.tel} \r\n      </li>\r\n    </ul>\r\n  );\r\n})\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer>\r\n        {newfooterData}\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import \"./test.css\";\r\n\r\nfunction Newtest(){\r\n    return(\r\n        <p className=\"test\">테스트용 컴포넌트 확인</p>\r\n    );\r\n}\r\n\r\nexport default Newtest;","import './App.css';\r\nimport './css/reset.css';\r\nimport Header from './component/header';\r\nimport Section from './component/section';\r\nimport Footer from './component/footer';\r\nimport Newtest from './component/comtest/newtest';\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  \r\n  console.log(process.env.PUBLIC_URL)\r\n  return (\r\n    \r\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n      <div className=\"App\">\r\n        <Header></Header>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Section}></Route>\r\n          <Route exact path=\"/com\" component={Newtest}></Route>\r\n        </Switch>\r\n        <Footer></Footer>\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}
{"version":3,"sources":["component/header.js","component/section.js","component/footer.js","App.js","reportWebVitals.js","index.js"],"names":["Header","data","GnbSet","props","GnbList","gnb","map","gnbList","i","className","InputSample","useState","addcompo","welcome","addWelcome","name","nickname","text","inputs","setInputs","onChange","e","target","value","Welcome","placeholder","onClick","addcomponent","Section","newfooterData","content","person","item","email","tel","Footer","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qbAwBeA,MAtBf,WACI,IAAMC,EAAO,CACb,CAAC,IAAQ,CAAC,gBAAM,gBAAM,gBAAM,mBAE5B,SAASC,EAAT,GAAwB,EAAPC,MAAQ,IACjBC,EAAUH,EAAK,GAAGI,IAAIC,KAAI,SAACC,EAASC,GAAV,OAAgB,6BAAaD,GAAJC,MACvD,OACI,6BACKJ,IAIf,OACE,mCACI,oBAAIK,UAAU,QAAd,qEACA,8BACI,cAACP,EAAD,CAAQD,KAAMA,EAAKI,Y,2BCb/B,SAASK,IAEP,MAA8BC,mBAAS,CACrCC,SAAS,KADX,mBAAOC,EAAP,KAAgBC,EAAhB,KAIA,EAA4BH,mBAAS,CACnCI,KAAK,GACLC,SAAS,GACTC,KAAK,KAHP,mBAAOC,EAAP,KAAeC,EAAf,KAMQJ,EAAyBG,EAAzBH,KAAMC,EAAmBE,EAAnBF,SAAUC,EAASC,EAATD,KAChBL,EAAaC,EAAbD,SAGFQ,EAAW,SAACC,GAChB,MAAwBA,EAAEC,OAAlBC,EAAR,EAAQA,MAAOR,EAAf,EAAeA,KACfI,EAAU,2BACLD,GADI,kBAENH,EAAOQ,MA4BNC,EAAU,WACd,OAAQ,uDAAWT,EAAX,oCAAyBC,EAAzB,kCAGV,OACE,gCACE,uBAAOD,KAAK,OAAOU,YAAY,eAAKL,SAAUA,EAAUG,MAAOR,IAC/D,uBAAOA,KAAK,WAAWU,YAAY,qBAAOL,SAAUA,EAAUG,MAAOP,IACrE,wBAAQU,QAhCI,WACdP,EAAU,CACRJ,KAAK,GACLC,SAAS,GACTC,KAAK,MA4BL,gCACA,gCACE,8BAAIF,EAAJ,OAAcC,EAAd,gEACA,wBAAQU,QA3BA,WACZP,EAAU,CACRJ,KAAKA,EACLC,SAASA,EACTC,KAAK,sBAAOF,EAAK,uBAAQC,EAAS,wBAuBhC,0BACA,4BAAIC,IACJ,wBAAQS,QApBC,WACb,IAAMC,EAAe,cAACH,EAAD,IAIrB,OAHAV,EAAW,2BACNA,GADK,IACOF,SAAUe,KAEpBf,GAeH,mDACCA,QAcMgB,MARf,WACE,OACE,kCACI,cAAClB,EAAD,OCzEFmB,G,WAA2BC,QAAQC,OAAOzB,KAAI,SAAC0B,EAAMjB,EAAOkB,EAAQC,GACxE,OACE,+BACE,6BACGF,EAAKjB,MADCA,GAGT,6BACGiB,EAAKC,OADCA,GAGT,6BACGD,EAAKE,KADCA,UAeAC,MARf,WACE,OACE,iCACKN,KCNMO,MAVf,WACE,OACE,sBAAK3B,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCCS4B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5678297c.chunk.js","sourcesContent":["import '../css/header.css';\r\n\r\nfunction Header() {\r\n    const data = [\r\n    {\"gnb\" : [\"목록1\",\"목록2\",\"목록3\",\"목록4\"]}\r\n    ];\r\n    function GnbSet({props}){\r\n        let GnbList = data[0].gnb.map((gnbList, i) => <li key={i}>{gnbList}</li>);\r\n        return(\r\n            <ul>\r\n                {GnbList}\r\n            </ul>\r\n        );\r\n    }\r\n  return (\r\n    <header>\r\n        <h1 className=\"title\">권지웅의 포트폴리오</h1>\r\n        <nav>\r\n            <GnbSet data={data.gnb}></GnbSet>\r\n        </nav>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import '../css/section.css';\r\nimport React, { useState } from 'react';\r\n\r\n\r\n\r\nfunction InputSample(){\r\n  /* welcome문구 state 설정 */\r\n  const [welcome, addWelcome] = useState({\r\n    addcompo:[]\r\n  });\r\n  /* input state 설정 */\r\n  const [inputs, setInputs] = useState({\r\n    name:'',\r\n    nickname:'',\r\n    text:''\r\n  });\r\n  /* state 저장 */\r\n  const { name, nickname, text } = inputs;\r\n  const { addcompo } = welcome;\r\n\r\n  /* onChane 이벤트로 state 변경 */\r\n  const onChange = (e) => {\r\n    const { value, name } = e.target;\r\n    setInputs({\r\n      ...inputs,\r\n      [name]: value\r\n    });\r\n  };\r\n  /* onReset 이벤트로 state 초기화 */\r\n  const onReset = () => {\r\n    setInputs({\r\n      name:'',\r\n      nickname:'',\r\n      text:''\r\n    });\r\n  };\r\n  /* onSet 이벤트로 state 다시 저장후 return*/\r\n  const onSet = () => {\r\n    setInputs({\r\n      name:name,\r\n      nickname:nickname,\r\n      text:\"이름은 \"+name+\" 별명은 \"+nickname+\"입니다\"\r\n    });\r\n      \r\n  };\r\n  /* addCom 이벤트로 state 활용한 컴포넌트 추가 */\r\n  const addCom = () => {\r\n    const addcomponent = <Welcome />;\r\n    addWelcome({\r\n      ...addWelcome, addcompo: addcomponent\r\n    });\r\n    return addcompo;\r\n  };\r\n  const Welcome = ()=> {\r\n    return (<h2>\"이름은 \"{name}\"이고 별명은\"{nickname}\"이시네요!\"</h2>);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input name=\"name\" placeholder=\"이름\" onChange={onChange} value={name}/>\r\n      <input name=\"nickname\" placeholder=\"닉네임\"  onChange={onChange} value={nickname}/>\r\n      <button onClick={onReset}>초기화</button>\r\n      <div>\r\n        <p>{name} / ({nickname})님 오신걸 환영합니다.</p>\r\n        <button onClick={onSet}>확인</button>\r\n        <p>{text}</p>\r\n        <button onClick={addCom}>컴포넌트 추가</button>\r\n        {addcompo}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Section() {\r\n  return (\r\n    <section>\r\n        <InputSample />\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Section;\r\n","import '../css/footer.css';\r\nimport footerData from '../json/footer.json';\r\n\r\nconst newfooterData = footerData.content.person.map((item, name,  email,  tel) => {\r\n  return (\r\n    <ul>\r\n      <li key={name}>\r\n        {item.name} \r\n      </li>\r\n      <li key={email}>\r\n        {item.email} \r\n      </li>\r\n      <li key={tel}>\r\n        {item.tel} \r\n      </li>\r\n    </ul>\r\n  );\r\n})\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer>\r\n        {newfooterData}\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import './App.css';\r\nimport './css/reset.css';\r\nimport Header from './component/header';\r\nimport Section from './component/section';\r\nimport Footer from './component/footer';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header></Header>\r\n      <Section></Section>\r\n      <Footer></Footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}